[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/Users/lau/Dropbox/desktop2/gits/bankingKata/src/main/scala/cat/martsec/bankingkata/Account.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(Account, Account.AccountSnapshot)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(Account, Account.AccountSnapshot)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/lau/Dropbox/desktop2/gits/bankingKata/src/main/scala/cat/martsec/bankingkata/Account.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to /Users/lau/Dropbox/desktop2/gits/bankingKata/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.3:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.0.3:compile for Scala 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 543660b7 for Scala compiler version 2.12.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/classes:/Users/lau/.sbt/boot/scala-2.12.4/lib/scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/lau/Dropbox/desktop2/gits/bankingKata/target/scala-2.12/classes:/Users/lau/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.4.jar:/Users/lau/.sbt/boot/scala-2.12.4/lib/scala-reflect.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.643030658 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Account...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Account)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Account)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Account,ModifiedNames(changes = UsedName(productArity,[Default]), UsedName(getClass,[Default]), UsedName(modifyBalance,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(deposit,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(AccountSnapshot,[Default]), UsedName(balance,[Default]), UsedName(snapshots,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Account,[Default]), UsedName(productPrefix,[Default]), UsedName(isInstanceOf,[Default]), UsedName(printStatements,[Default]), UsedName(idCounter,[Default]), UsedName(withdrawal,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(Account;init;,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(copy$default$3,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(id,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The Account has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productArity,[Default]), UsedName(getClass,[Default]), UsedName(modifyBalance,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(deposit,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(AccountSnapshot,[Default]), UsedName(balance,[Default]), UsedName(snapshots,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Account,[Default]), UsedName(productPrefix,[Default]), UsedName(isInstanceOf,[Default]), UsedName(printStatements,[Default]), UsedName(idCounter,[Default]), UsedName(withdrawal,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(Account;init;,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(copy$default$3,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(id,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Account)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Account.AccountSnapshot...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Account.AccountSnapshot)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Account.AccountSnapshot)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Account.AccountSnapshot,ModifiedNames(changes = UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(getClass,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(AccountSnapshot,[Default]), UsedName(balance,[Default]), UsedName(wait,[Default]), UsedName(Account;AccountSnapshot;init;,[Default]), UsedName(##,[Default]), UsedName(date,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(copy$default$3,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(tupled,[Default]), UsedName(amount,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The Account.AccountSnapshot has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(getClass,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(AccountSnapshot,[Default]), UsedName(balance,[Default]), UsedName(wait,[Default]), UsedName(Account;AccountSnapshot;init;,[Default]), UsedName(##,[Default]), UsedName(date,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(copy$default$3,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(tupled,[Default]), UsedName(amount,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Account.AccountSnapshot)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from cat.martsec.bankingkata.Account...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(cat.martsec.bankingkata.Account)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(cat.martsec.bankingkata.Account)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(cat.martsec.bankingkata.Account,ModifiedNames(changes = UsedName(productArity,[Default]), UsedName(getClass,[Default]), UsedName(modifyBalance,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(deposit,[Default]), UsedName(productElement,[Default]), UsedName(cat;martsec;bankingkata;Account;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(AccountSnapshot,[Default]), UsedName(balance,[Default]), UsedName(snapshots,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Account,[Default]), UsedName(productPrefix,[Default]), UsedName(isInstanceOf,[Default]), UsedName(printStatements,[Default]), UsedName(idCounter,[Default]), UsedName(withdrawal,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(copy$default$3,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(id,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The cat.martsec.bankingkata.Account has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productArity,[Default]), UsedName(getClass,[Default]), UsedName(modifyBalance,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(deposit,[Default]), UsedName(productElement,[Default]), UsedName(cat;martsec;bankingkata;Account;init;,[Default]), UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(AccountSnapshot,[Default]), UsedName(balance,[Default]), UsedName(snapshots,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Account,[Default]), UsedName(productPrefix,[Default]), UsedName(isInstanceOf,[Default]), UsedName(printStatements,[Default]), UsedName(idCounter,[Default]), UsedName(withdrawal,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(copy$default$3,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(asInstanceOf,[Default]), UsedName(id,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(cat.martsec.bankingkata.Account)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from cat.martsec.bankingkata.Account.AccountSnapshot...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(cat.martsec.bankingkata.Account.AccountSnapshot)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(cat.martsec.bankingkata.Account.AccountSnapshot)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(cat.martsec.bankingkata.Account.AccountSnapshot,ModifiedNames(changes = UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(getClass,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(AccountSnapshot,[Default]), UsedName(balance,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(date,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(cat;martsec;bankingkata;Account;AccountSnapshot;init;,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(copy$default$3,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(tupled,[Default]), UsedName(amount,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]))) invalidates 1 classes due to The cat.martsec.bankingkata.Account.AccountSnapshot has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(curried,[Default]), UsedName(productArity,[Default]), UsedName(getClass,[Default]), UsedName(copy,[Default]), UsedName(copy$default$1,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$2,[Default]), UsedName(canEqual,[Default]), UsedName(ne,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(AccountSnapshot,[Default]), UsedName(balance,[Default]), UsedName(wait,[Default]), UsedName(##,[Default]), UsedName(date,[Default]), UsedName(notifyAll,[Default]), UsedName($isInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(isInstanceOf,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(==,[Default]), UsedName(notify,[Default]), UsedName(cat;martsec;bankingkata;Account;AccountSnapshot;init;,[Default]), UsedName(eq,[Default]), UsedName(synchronized,[Default]), UsedName(copy$default$3,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(equals,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName($init$,[Default]), UsedName(tupled,[Default]), UsedName(amount,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(cat.martsec.bankingkata.Account.AccountSnapshot)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
